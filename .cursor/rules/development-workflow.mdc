# Development Workflow

## Project Setup

- This is a Next.js 15 project with React 19 and TypeScript
- Uses Tailwind CSS 4 for styling
- Development server runs with Turbopack: `npm run dev`

## Adding New Exercises

1. Create a new directory in `app/exercises/{exercise-name}/`
2. Create `component.tsx` with the animation component
3. Create `component.module.css` for styles
4. Create `page.tsx` using ExerciseDisplay wrapper
5. Add the exercise to the main page in [app/page.tsx](mdc:app/page.tsx)

## Code Quality

- Use TypeScript strict mode (enabled in [tsconfig.json](mdc:tsconfig.json))
- Follow the established component patterns
- Keep components focused and single-purpose
- Use semantic HTML elements
- Ensure animations are accessible (respect `prefers-reduced-motion`)

## File Naming Conventions

- Use kebab-case for directory names: `card-hover`, `text-reveal`
- Use PascalCase for component names: `CardHoverComponent`
- Use camelCase for CSS class names in modules
- Use descriptive names that explain the animation behavior

## Testing Animations

- Test on different devices and screen sizes
- Verify animations work with reduced motion preferences
- Check performance on lower-end devices
- Ensure animations enhance UX, not distract from it

## Dependencies

- Keep dependencies minimal and focused
- Use the latest stable versions of React and Next.js
- Prefer CSS solutions over JavaScript for animations when possible
